# https://github.com/envoyproxy/envoy-mobile/blob/main/.github/workflows/android_build.yml
name: envoy-mobile-android-build

on:
  # push:
  #   branches:
  #     - main
  # pull_request:
  # schedule:
  #   - cron:  '0 2 * * *'
  workflow_dispatch:

jobs:
  androidbuild:
    name: android_build
    runs-on: macOS-latest
    timeout-minutes: 180
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v2
        with:
          repository: envoyproxy/envoy-mobile
          submodules: true
      - name: Get Repo Sha
        id: get-sha
        run: |
          echo "::set-output name=sha::$(git rev-list --max-count=1 origin/main)"
        shell: bash
      - uses: actions/cache@v2
        id: check-cache
        with:
          key: aar-${{ steps.get-sha.outputs.sha }}
          path: dist/envoy.aar
        name: 'Check cache'
      - run: echo "Found envoy.aar from previous run!"
        if: steps.check-cache.outputs.cache-hit == 'true'
        name: 'Build cache hit'
      - uses: actions/setup-java@v1
        if: steps.check-cache.outputs.cache-hit != 'true'
        with:
          java-version: '8'
          java-package: jdk
          architecture: x64
      - run: ./ci/mac_ci_setup.sh
        if: steps.check-cache.outputs.cache-hit != 'true'
        name: 'Install dependencies'
      - run: bazelisk build --fat_apk_cpu=x86,armeabi-v7a,arm64-v8a //:android_dist_ci
        if: steps.check-cache.outputs.cache-hit != 'true'
        name: 'Build envoy.aar distributable'
  javahelloworld:
    name: java_helloworld
    needs: androidbuild
    runs-on: macOS-latest
    timeout-minutes: 90
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v2
        with:
          repository: envoyproxy/envoy-mobile
          submodules: true
      - name: Get Repo Sha
        id: get-sha
        run: |
          echo "::set-output name=sha::$(git rev-list --max-count=1 origin/main)"
        shell: bash
      - uses: actions/setup-java@v1
        with:
          java-version: '8'
          java-package: jdk
          architecture: x64
      - run: ./ci/mac_ci_setup.sh
        name: 'Install dependencies'
      - uses: actions/cache@v2
        id: check-cache
        with:
          key: aar-${{ steps.get-sha.outputs.sha }}
          path: dist/envoy.aar
        name: 'Download aar'
      - run: exit 1
        if: steps.check-cache.outputs.cache-hit != 'true'
        name: 'Short-circuit'
      - name: start simulator
        run: ./ci/mac_start_emulator.sh
      # Return to using:
      #   bazelisk mobile-install --fat_apk_cpu=x86 --start_app //examples/java/hello_world:hello_envoy
      # When https://github.com/lyft/envoy-mobile/issues/853 is fixed.
      - run: |
          bazelisk build --fat_apk_cpu=x86,armeabi-v7a,arm64-v8a //examples/java/hello_world:hello_envoy
          adb install -r --no-incremental bazel-bin/examples/java/hello_world/hello_envoy.apk
          adb shell am start -n io.envoyproxy.envoymobile.helloenvoy/.MainActivity
        name: 'Start java app'
      - run: 'adb logcat -e "received headers with status 200" -m 1'
        name: 'Check connectivity'
      # upload
      - uses: actions/upload-artifact@v2
        with:
          name: hello_envoy_apk
          path: bazel-bin/examples/java/hello_world/hello_envoy.apk
  kotlinhelloworld:
    name: kotlin_helloworld
    needs: androidbuild
    runs-on: macOS-latest
    timeout-minutes: 90
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v2
        with:
          repository: envoyproxy/envoy-mobile
          submodules: true
      - name: Get Repo Sha
        id: get-sha
        run: |
          echo "::set-output name=sha::$(git rev-list --max-count=1 origin/main)"
        shell: bash
      - uses: actions/setup-java@v1
        with:
          java-version: '8'
          java-package: jdk
          architecture: x64
      - run: ./ci/mac_ci_setup.sh
        name: 'Install dependencies'
      - uses: actions/cache@v2
        id: check-cache
        with:
          key: aar-${{ steps.get-sha.outputs.sha }}
          path: dist/envoy.aar
        name: 'Download aar'
      - run: exit 1
        if: steps.check-cache.outputs.cache-hit != 'true'
        name: 'Short-circuit'
      - name: start simulator
        run: ./ci/mac_start_emulator.sh
      # Return to using:
      #   bazelisk mobile-install --fat_apk_cpu=x86 --start_app //examples/kotlin/hello_world:hello_envoy_kt
      # When https://github.com/lyft/envoy-mobile/issues/853 is fixed.
      - run: |
          bazelisk build --fat_apk_cpu=x86,armeabi-v7a,arm64-v8a //examples/kotlin/hello_world:hello_envoy_kt
          adb install -r --no-incremental bazel-bin/examples/kotlin/hello_world/hello_envoy_kt.apk
          adb shell am start -n io.envoyproxy.envoymobile.helloenvoykotlin/.MainActivity
        name: 'Start kotlin app'
      - run: 'adb logcat -e "received headers with status 200" -m 1'
        name: 'Check connectivity'
     # upload
      - uses: actions/upload-artifact@v2
        with:
          name: hello_envoy_kt_apk
          path: bazel-bin/examples/java/hello_world/hello_envoy_kt.apk

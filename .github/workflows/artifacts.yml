# https://github.com/envoyproxy/envoy-mobile/blob/main/.github/workflows/artifacts.yml
name: envoy-mobile-artifacts

on:
#   push:
#     tags:
#       - v*
  workflow_dispatch:

jobs:
  main_android_dist_ci:
    name: main_android_dist_ci
    runs-on: macOS-latest
    timeout-minutes: 180
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v2
        with:
          repository: envoyproxy/envoy-mobile
          submodules: true
      - uses: actions/setup-java@v1
        with:
          java-version: '8'
          java-package: jdk
          architecture: x64
      - run: ./ci/mac_ci_setup.sh
        name: 'Install dependencies'
      - name: 'Build envoy.aar distributable'
        run: |
          current_short_commit=$(git rev-parse --short HEAD)
          bazelisk build \
              --config=release-android \
              --fat_apk_cpu=x86,armeabi-v7a,arm64-v8a \
              --define=pom_version=main-$current_short_commit \
              //:android_dist_ci
      - name: 'Tar artifacts'
        run: tar -czvf envoy_mobile.tar.gz dist/envoy.aar dist/envoy-pom.xml dist/envoy-javadoc.jar dist/envoy-sources.jar
      - uses: actions/upload-artifact@v2
        with:
          name: envoy_android_aar_sources
          path: ./envoy_mobile.tar.gz
      # hello envoy apk
      - name: start simulator
        run: ./ci/mac_start_emulator.sh
      # Return to using:
      #   bazelisk mobile-install --fat_apk_cpu=x86 --start_app //examples/java/hello_world:hello_envoy
      # When https://github.com/lyft/envoy-mobile/issues/853 is fixed.
      - run: |
          bazelisk build --fat_apk_cpu=x86,armeabi-v7a,arm64-v8a //examples/java/hello_world:hello_envoy
          adb install -r --no-incremental bazel-bin/examples/java/hello_world/hello_envoy.apk
          adb shell am start -n io.envoyproxy.envoymobile.helloenvoy/.MainActivity
        name: 'Start java app'
      - run: 'adb logcat -e "received headers with status 200" -m 1'
        name: 'Check connectivity'
      # upload
      - uses: actions/upload-artifact@v2
        with:
          name: hello_envoy_apk
          path: bazel-bin/examples/java/hello_world/hello_envoy.apk

  main_ios_dist:
    name: main_ios_dist
    runs-on: macOS-latest
    timeout-minutes: 120
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v2
        with:
          repository: envoyproxy/envoy-mobile
          submodules: true
      - name: 'Install dependencies'
        run: ./ci/mac_ci_setup.sh
      - name: 'Build Envoy.framework distributable'
        run: bazelisk build --config=release-ios --ios_multi_cpus=i386,x86_64,armv7,arm64 //:ios_dist
      - name: 'Create temporary directory for artifact to produce properly named zip'
        run: mkdir -p dist/ios_artifact/Envoy.framework
      - name: 'Move artifact to directory for zipping'
        run: mv dist/Envoy.framework/* dist/ios_artifact/Envoy.framework
      - uses: actions/upload-artifact@v2
        with:
          name: envoy_ios_framework
          path: dist/ios_artifact

  main_ios_cocoapods:
    name: main_ios_cocoapods
    runs-on: macOS-latest
    timeout-minutes: 45
    needs: [main_ios_dist]
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v2
        with:
          repository: envoyproxy/envoy-mobile
          submodules: true
      - name: 'Install dependencies'
        run: ./ci/mac_ci_setup.sh
      - uses: actions/download-artifact@v2
        with:
          name: envoy_ios_framework
          path: dist/envoy_ios_cocoapods
      - name: 'Copy license for CocoaPods'
        run: cp LICENSE dist/envoy_ios_cocoapods
      - name: 'Create empty Swift sources directory'
        run: mkdir -p dist/envoy_ios_cocoapods/Envoy.framework/Swift
      - name: 'Create empty Swift file to force Swift libraries to link properly'
        run: touch dist/envoy_ios_cocoapods/Envoy.framework/Swift/Empty.swift
      - uses: actions/upload-artifact@v2
        with:
          name: envoy_ios_cocoapods
          path: dist/envoy_ios_cocoapods

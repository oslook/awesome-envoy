# https://github.com/envoyproxy/envoy-mobile/blob/main/.github/workflows/ios_build.yml
# Required Github Action Secret `secrets.ENGFLOW_CREDENTIALS` to set in remote-mac.
name: ios-build

on:
#   push:
#     branches:
#       - main
#   pull_request:
  # schedule:
  #   - cron:  '0 2 * * *'
  workflow_dispatch:

jobs:
  iosbuild:
    name: ios_build
    runs-on: macOS-latest
    timeout-minutes: 75
    steps:
      - uses: actions/checkout@v2
        with:
          repository: envoyproxy/envoy-mobile
          submodules: true
      - name: Get Repo Sha
        id: get-sha
        run: |
          echo "::set-output name=sha::$(git rev-list --max-count=1 origin/main)"
        shell: bash
      - uses: actions/cache@v2
        id: check-cache
        with:
          key: framework-${{ steps.get-sha.outputs.sha }}
          path: dist/Envoy.framework
        name: 'Check cache'
      - run: echo "Found Envoy.framework from previous run!"
        if: steps.check-cache.outputs.cache-hit == 'true'
        name: 'Build cache hit'
      - run: ./ci/mac_ci_setup.sh
        if: steps.check-cache.outputs.cache-hit != 'true'
        name: 'Install dependencies'
      - run: bazelisk build --config=ios //:ios_dist
        if: steps.check-cache.outputs.cache-hit != 'true'
        name: 'Build Envoy.framework distributable'
  swifthelloworld:
    name: swift_helloworld
    needs: iosbuild
    runs-on: macOS-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
        with:
          repository: envoyproxy/envoy-mobile
          submodules: true
      - run: ./ci/mac_ci_setup.sh
        name: 'Install dependencies'
      - name: Get Repo Sha
        id: get-sha
        run: |
          echo "::set-output name=sha::$(git rev-list --max-count=1 origin/main)"
        shell: bash
      - uses: actions/cache@v2
        id: check-cache
        with:
          key: framework-${{ steps.get-sha.outputs.sha }}
          path: dist/Envoy.framework
        name: 'Download framework'
      - run: exit 1
        if: steps.check-cache.outputs.cache-hit != 'true'
        name: 'Short-circuit'
      - run: bazelisk build --config=ios //examples/swift/hello_world:app
        name: 'Build swift app'
      # Run the app in the background and redirect logs.
      - run: bazelisk run --config=ios //examples/swift/hello_world:app &> /tmp/envoy.log &
        name: 'Run swift app'
      - run: sed '/received headers with status 200/q' <(touch /tmp/envoy.log && tail -F /tmp/envoy.log)
        name: 'Check connectivity'
      - run: cat /tmp/envoy.log
        if: ${{ failure() || cancelled() }}
        name: 'Log app run'
  objchelloworld:
    name: objc_helloworld
    needs: iosbuild
    runs-on: macOS-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
        with:
          repository: envoyproxy/envoy-mobile
          submodules: true
      - name: Get Repo Sha
        id: get-sha
        run: |
          echo "::set-output name=sha::$(git rev-list --max-count=1 origin/main)"
        shell: bash
      - uses: actions/cache@v2
        id: check-cache
        with:
          key: framework-${{ steps.get-sha.outputs.sha }}
          path: dist/Envoy.framework
        name: 'Download framework'
      - run: exit 1
        if: steps.check-cache.outputs.cache-hit != 'true'
        name: 'Short-circuit'
      - run: bazelisk build --config=ios //examples/objective-c/hello_world:app
        name: 'Build objective-c app'
      # Run the app in the background and redirect logs.
      - run: bazelisk run --config=ios //examples/objective-c/hello_world:app &> /tmp/envoy.log &
        name: 'Run objective-c app'
      - run: sed '/received headers with status 200/q' <(touch /tmp/envoy.log && tail -F /tmp/envoy.log)
        name: 'Check connectivity'
      - run: cat /tmp/envoy.log
        if: ${{ failure() || cancelled() }}
        name: 'Log app run'

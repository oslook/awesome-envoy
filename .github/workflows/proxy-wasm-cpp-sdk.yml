# https://github.com/proxy-wasm/proxy-wasm-cpp-sdk

name: proxy-wasm-cpp-sdk
on:
  # push:
  #   branches:
  #   - main
  workflow_dispatch:
jobs:
  examples:
    strategy:
      fail-fast: false
      matrix:
        image: [
          "envoyproxy/envoy-dev:latest", 
          # "envoyproxy/envoy:v1.18.2", 
          # "istio/proxyv2:1.9.6", 
          # "istio/proxyv2:1.10.3",
          ]
    name: build - (${{ matrix.image }}
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2.1.0
      with:
        repository: proxy-wasm/proxy-wasm-cpp-sdk
    - name: Mount bazel cache
      uses: actions/cache@v1
      with:
        path: "/home/runner/.cache/bazel"
        key: bazel-cpp-${{ runner.os }}

    # - name: Install bazelisk

    - name: Test
      run: |
        bazel version
        bazel build //...
        ls -l bazel-bin/example/http_wasm_example.wasm
    - run: |
        docker run --rm --entrypoint envoy ${{ matrix.image }} --version
        echo "-----"
        wget -O $GITHUB_WORKSPACE/envoycfg.yaml https://raw.githubusercontent.com/oslook/envoy-actions/main/configs/cpp-sdk-example.yaml
        docker run -d --name envoy \
        -v $GITHUB_WORKSPACE/envoycfg.yaml:/etc/envoy/envoy.yaml \
        -v $GITHUB_WORKSPACE/bazel-bin/example:/example \
        --entrypoint envoy \
        -p 8080:8080  ${{ matrix.image }} -c /etc/envoy/envoy.yaml
        docker ps
        sleep 5 # need check envoy started.
        docker logs envoy
        STATUSCODE=$(curl --silent --output /dev/stderr --write-out "%{http_code}" localhost:8080)
        echo $STATUSCODE
        curl -v localhost:8080
        # if test $STATUSCODE -ne 200; then
        #   echo $STATUSCODE
        # fi
  examples-macos:
    name: build-MacOS
    runs-on: macOS-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2.1.0
      with:
        repository: proxy-wasm/proxy-wasm-cpp-sdk
    - name: Mount bazel cache
      uses: actions/cache@v1
      with:
        path: "/home/runner/.cache/bazel"
        key: bazel-cpp-${{ runner.os }}

    # - name: Install bazelisk
            
    - name: Test
      run: |
        bazel version
        bazel build //...
        ls -l bazel-bin/example/http_wasm_example.wasm
